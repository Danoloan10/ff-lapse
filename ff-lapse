#!/bin/sh

h='ffmpeg wrapper for recording time-lapses using v4l2.
usage: timelapse [options]
options:
	-d DEVICE	Will record from the device file DEVICE (default=/dev/video0)
	-n PATH		File used to store temporal variables (default=/tmp/ff-lapse)
	-s WIDTHxHEIGHT	Dimensions in pixels of the image captured by the device (default=1920x1080)
	-m N > 9	Max number of images to take into accout for zero padding (default=10^(10))
	-t N > 0	Time between $out in seconds (default=1)
	-o PATH		Path to store images (default=shots/)
	-h		Show this help'

tmp="/tmp/ff-lapse"
dev="/dev/video0"
size="1920x1080"
time=1
max="10000000000"
out="shots/"

while getopts 'o:t:m:n:d:s:h' OPTION
do
	case "$OPTION" in
		d)			
			[ -z $OPTARG ] && { echo "$h" >&2; exit 0; }
			ls $OPTARG &> /dev/null && dev=$OPTARG || { echo "ERROR: $OPTARG does not exist. Exiting."; exit 0; }
			;;
		n)
			[ -z $OPTARG ] && { echo "$h" >&2; exit 0; }
			tmp=$OPTARG
			;;
		s)
			[ -z $OPTARG ] && { echo "$h" >&2; exit 0; }
			size=$OPTARG
			;;
		m)
			[ -z $OPTARG ] && { echo "$h" >&2; exit 0; }
			echo $OPTARG | egrep -q '^[0-9]+$' && [ $OPTARG -gt 9 ] || { echo "$h" >&2; exit 0; }
			max=$OPTARG
			;;
		t)
			[ -z $OPTARG ] && { echo "$h" >&2; exit 0; }
			echo $OPTARG | egrep -q '^[0-9]+$' && [ $OPTARG -gt 0 ] || { echo "$h" >&2; exit 0; }
			time=$OPTARG
			;;
		o)
		 	[ -z $OPTARG ] && { echo "$h" >&2; exit 0; }
			out=$OPTARG
			;;
		h)  
			echo "$h" >&2
			exit 0
			;;
		?)
			echo "$h" >&2
			exit 0
			;;
	esac
done
			
			

if [ -n "`ls $out`" ]; then
	echo "'$out' folder is not empty. Do you want to clear all its contents PERMANENTLY [y/N]?";
	read y;
	if [ $y == "y" ]; then
		if ! rm -r $out/*; then
			echo "Folder could not be cleared, exiting...";
			exit 1;
		fi
	else
		echo "Error creating directory '$out', exiting...";
		exit 1;
	fi
fi
mkdir -p $out

pad=$(($max-1))
pad=${#pad}

echo 0 > $tmp

cmd="$cmd read N < $tmp;"
cmd="$cmd N="'$(echo $N | sed 's/^0*//')'";"
cmd="$cmd ffmpeg -f v4l2 -video_size $size -i $dev -vframes 1"
cmd="$cmd ""$out/"'shot$(printf "%0'"$pad"'d" $N)'".jpeg;"
cmd="$cmd "'N=$((N+1));'
cmd="$cmd echo"' $N > '"$tmp"

watch -n 1 -p $cmd
